 //Сортировка вставками / Insertion sort

void insertionsort(int* l, int* r) {

  auto start = chrono::steady_clock::now();
    for (int *i = l + 1; i < r; i++) {
        int* j = i;
        while (j > l && *(j - 1) > *j) {
            swap(*(j - 1), *j);
            j--;
        }
    }
     auto stop = chrono::steady_clock::now();
    auto ns = chrono::duration_cast<chrono::nanoseconds>(stop - start);
    cout << "runtime  = " << ns.count() << " nanosec" << endl;
}

void main()
    {
        cout << "Before sort:\n";
        for (int i = 0; i < n; ++i)
            A[i] = i + 1;
        random_shuffle(A, A + n);
        for (int i = 0; i < n; ++i)
            cout << A[i] << "  ";
        cout << endl;

        cout << "insertionsort:\n";
        insertionsort(A, A + n);

        for (int i = 0; i < n; ++i)
            cout << A[i] << "  ";
        cout << endl;


        _getch();
    }
*/